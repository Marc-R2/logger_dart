name: Merge and test Master
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    needs: [Dart]
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: dart pub get

      - name: Pull master
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git remote add upstream "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          git fetch upstream
          git merge upstream/master --allow-unrelated-histories

      # Get a list of all test files
      - name: Get test files
        run: tests=$(find test -name "*_test.dart")
        shell: bash
        id: test_files

      # Create a step for each test file
      - name: Run tests
        run: dart pub run test ${{ steps.test_files.outputs.tests }}
        shell: bash
          # loop: ${{ steps.test_files.outputs.tests.split() }}

      # Commit and push the changes to master if all the previous steps did not fail
      - name: Commit and push
        if: success()
        run: |
          git add .
          # Get the commit message of the original commit
          commit_message=$(git log --format=%B -n 1 ${{ github.event.before }})
          # Append a hint that the changes were tested in CI
          commit_message="$commit_message (tested in CI)"
          git commit -m "$commit_message"
          git push upstream HEAD:master

      - name: Coverage information
        run: |
          dart pub global activate coverage
          dart pub global run coverage:test_with_coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
