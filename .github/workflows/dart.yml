# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: "2.19.0-146.2.beta"

      - name: Install dependencies
        run: dart pub get

  #lint:
  #  runs-on: ubuntu-latest
  #  needs: build
  #  steps:
      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze

  #test:
  #  runs-on: ubuntu-latest
  #  needs: build
  #  steps:
      # Get a list of all test files
      - name: Get test files
        run: tests=$(find test -name "*_test.dart")
        shell: bash
        id: test_files

      # Create a step for each test file
      - name: Run tests
        run: dart pub run test ${{ steps.test_files.outputs.tests }}
        shell: bash

  #coverage:
  #  runs-on: ubuntu-latest
  #  needs: build
  #  steps:
      - name: Coverage information
        run: |
          dart pub global activate coverage
          dart pub global run coverage:test_with_coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info

      - name: Check if code coverage is above 95% and branch is not a protected one
        run: |
            coverage=$(grep -oP 'lines......\K\d+(\.\d+)?' coverage/lcov.info)
            branch_name=${{ github.ref }}
            author_name=$(git log -1 --pretty=format:'%an')
            author_email=$(git log -1 --pretty=format:'%ae')
            author_date=$(git log -1 --pretty=format:'%ad')
            changed_files=$(git diff --name-only HEAD~1)
            
            if (( $(echo "$coverage > 95" | bc -l) )) && ! echo "$branch_name" | grep -q "master\|alpha\|beta\|stable\|release" && ! echo "$commit_message" | grep -q 'Merge'; then
              echo "Conditions met, creating pull request"
              - name: Run the Action
                uses: devops-infra/action-pull-request@v0.5.3
                with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  source_branch: ${{github.ref}}
                  target_branch: master
                  title: "$COMMIT_MESSAGE (Automated Pull Request with ${coverage}% coverage)"
                  body: "**Commit**: ${{ github.sha }}\n\n$COMMIT_MESSAGE \n\n*This pull request was automatically generated because the code coverage is above 95%.*\n\n**Author**: ${author_name} (${author_email})\n\n**Date**: ${author_date}\n\n**Changed files**: ${changed_files}\n\n*This pull request was automatically generated.*"
                  label: great-coverage, automated
                  reviewer: ${author_name}
                  assignee: ${author_name}
                  ignore_users: "dependabot"
                  allow_no_diff: false
                  get_diff: false
            else
              echo "Conditions not met, skipping pull request creation"
            fi